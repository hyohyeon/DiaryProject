<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.OmsMapper">

	<select id="findByNameAndPhoneNumber" parameterType="hashmap"
		resultType="com.example.dto.Member">
		SELECT MBRNAME, MBRPHONE, MBRADDRESS, MBRID
		FROM MEMBER
		WHERE MBRNAME = #{mbrName} AND MBRPHONE = #{mbrPhone}
	</select>

	<select id="productList" parameterType="hashmap" resultType="com.example.dto.Product">
		SELECT *
		FROM PRODUCT
	</select>

	<insert id="insertOrderList" parameterType="hashmap">
		INSERT INTO
		ORDERDETAIL(ODTNO, PRDCODE, ODTQUANTITY, ODTCHECK, ORDNO)
		VALUES(ORDERDETAIL_SEQ.NEXTVAL, #{prdName}, #{prdQuantity}, 1,
		(SELECT
		ORDNO FROM
		(SELECT * FROM ORD
		WHERE MBRID=#{mbrId}
		ORDER BY ORDDATE DESC)
		WHERE ROWNUM=1))
	</insert>


	<insert id="insertOrder" parameterType="hashmap">
		INSERT INTO
		ORD(ORDNO,
		MBRID, ORDNAME, ORDADDRESS, ORDPHONE, DRNO, ORDDELIVERYDATE,
		INSTALLTIME, ORDMEMO)
		VALUES(ORD_SEQ.NEXTVAL, #{mbrId}, #{ordName},
		#{ordAddress}, #{ordPhone}, #{drNo}, #{dbDate}, #{totalInstallTime}, #{ordMemo})
	</insert>

	<select id="selectDriverEnableTimeByDate" parameterType="hashmap"
		resultType="com.example.dto.Driver">

		select a.drno
		from driver a left outer join (select b.drno
		,
		sum(b.installtime) as installtime
		from ord b
		where b.ORDDELIVERYDATE =
		#{dbDate}
		group by
		b.drno
		) b
		on a.drno = b.drno
		where b.drno is null
		or
		b.installtime <![CDATA[ <=  ]]>8
		- #{totalInstallTime}
	</select>

	<select id="findOrderList" parameterType="hashmap" resultType="com.example.dto.Order">
		SELECT *
		FROM ORD
		WHERE TO_CHAR(ORDDATE,'YYYY-MM-DD') BETWEEN #{stDate}
		AND #{fhDate}
		AND MBRID LIKE '%'||#{mbrId}||'%'
		AND ORDNAME LIKE
		'%'||#{mbrName}||'%'
		AND ORDPHONE LIKE '%'||#{mbrPhone}||'%'
	</select>

	<select id="findOrderDetailByOrderNo" parameterType="int"
		resultType="com.example.dto.OrderDetail">
		SELECT *
		FROM ORDERDETAIL OD, PRODUCT PD
		WHERE OD.ORDNO = #{ordNo} AND OD.PRDCODE = PD.PRDCODE
	</select>
	
	<select id="findOrderByOrderNo" parameterType="int" resultType="com.example.dto.Order">
		SELECT *
		FROM ORD
		WHERE ORDNO=#{ordNo}
	</select>
	
	<update id="updateOrder" parameterType="hashmap">
		UPDATE ORD
    	SET MBRID = #{mbrId}, ORDNAME = #{ordName}, ORDADDRESS = #{ordAddress},
    	ORDPHONE = #{ordPhone}, DRNO = #{drNo}, ORDDELIVERYDATE=#{dbDate}, 
    	INSTALLTIME = #{totalInstallTime}, ORDMEMO = #{ordMemo}
    	WHERE ORDNO = #{ordNo}
	</update>
	
	<delete id="deleteOrderList" parameterType="int">
		DELETE FROM ORDERDETAIL WHERE ORDNO = #{ordNo}
	</delete>
	
	<insert id="updateOrderList" parameterType="hashmap">
		INSERT INTO ORDERDETAIL(ODTNO, PRDCODE, ODTQUANTITY, ODTCHECK, ORDNO, MBRID)
		VALUES(ORDERDETAIL_SEQ.NEXTVAL, #{prdCode}, #{quantityList}, 1, #{ordNo}, #{mbrId})
	</insert>
	
	<delete id="deleteOrder" parameterType="int">
		DELETE FROM ORD WHERE ORDNO = #{ordNo}
	</delete>
	
	<select id="filterProductList" parameterType="hashmap" resultType="com.example.dto.Product">
		SELECT *
		FROM PRODUCT
		<include refid="search"/>
	</select>
	
<!-- sql code 조각 -->
<!-- 반복되는 sql의 일부를 sql태그를 이용하여 따로 빼둘수 있다. -->
<sql id="search">
    <choose>
        <!-- 검색옵션이 전체 검색일 경우 -->
        <when test="searchOption == 'all'">
            WHERE PRDNAME like '%'||#{keyword}||'%'
        </when>
        <!-- 전체 검색이 아닐 경우 -->
        <otherwise>
            WHERE PRDCATEGORY = #{searchOption} AND PRDNAME like '%'||#{keyword}||'%'
        </otherwise>
    </choose>
</sql>
</mapper>






